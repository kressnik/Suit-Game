"use strict";$((function(){const e={grid:[],boxId:"#game-3",boxBody:".game-box__lines",lineClass:".game-box__line",elementClass:".game-box__suit",inputLine:'[name="qty-line"]',inputElement:'[name="qty-suit"]',boxElement:".game-box__next-element",resetBtn:".game-box__reset-game"},t=d(),n=new Grid(t),s=n.create();e.grid=s;const i=n.getNextElement(),l=new GridModificator(s,i()),r=new GridDraw(e);function o(){const e=$(this).parent().data("key-line"),t=$(this).data("key-element"),s=l.change(e,t);r.update(s);const i=n.getNextElement();l.changeElement(i()),r.printNextElement(i()),l.hasAllDuplicate()&&(c(),alert("You win!!!"))}function a(){const e=d();c(n.updateSize(e))}function d(){return{qtyLine:$(`${e.boxId} ${e.inputLine}`).val(),qtyElement:$(`${e.boxId} ${e.inputElement}`).val()}}function c(t){t=t?"click"===t.type?n.reset():t:n.reset(),l.update(t),r.update(t),r.clearBody(),r.create(),$(`${e.boxId} ${e.elementClass}`).on("click",o)}r.printNextElement(i()),r.clearBody(),r.create(),$(`${e.boxId} ${e.elementClass}`).on("click",o),$(`${e.boxId} ${e.inputLine}`).on("change",a),$(`${e.boxId} ${e.inputElement}`).on("change",a),$(`${e.boxId} ${e.resetBtn}`).on("click",c)}));class Grid{constructor({qtyLine:e=null,qtyElement:t=null,elementArr:n=null}){this.grid=[],this.qtyLine=e||7,this.qtyElement=t||6,this.elementArr=n||["spades","clubs","diams","hearts"]}create(){for(let e=0;e<this.qtyLine;e++){this.grid[e]=[];for(let t=0;t<this.qtyElement;t++)this.grid[e].push(this.elementArr.randElement())}return JSON.parse(JSON.stringify(this.grid))}get(){return JSON.parse(JSON.stringify(this.grid))}reset(){return this.create()}updateSize({qtyLine:e,qtyElement:t}){return this.qtyLine=e||this.qtyLine,this.qtyElement=t||this.qtyElement,this.create()}getNextElement(){const e=this.elementArr.randElement();return()=>e}}class GridModificator{constructor(e=null,t=null){this.grid=e,this.selectedElement="",this.changeToElement=t||""}change(e,t){return this.selectedElement=this.grid[e][t],this.selectedElement!==this.changeToElement&&this.dfs(e,t),JSON.parse(JSON.stringify(this.grid))}changeElement(e){this.changeToElement=e}update(e){e?this.grid=e:console.error("Not new grid")}hasAllDuplicate(){return 0===this.grid.map(e=>new Set(e)).filter(e=>e.size>1).length}dfs(e,t){const n=[0,1],s=[1,0],i=[0,-1],l=[-1,0];this.grid[e][t]=this.changeToElement;for(const[r,o]of[n,s,i,l]){const n=e+o,s=t+r,i=this.grid.length,l=this.grid[0].length;this.checkSizeGrid(i,l,n,s)&&this.grid[n][s]===this.selectedElement&&this.dfs(n,s)}return!0}checkSizeGrid(e,t,n,s){return 0<=n&&n<e&&0<=s&&s<t}}class GridDraw{constructor({grid:e=null,boxId:t=null,boxBody:n=null,lineClass:s=null,elementClass:i=null,boxElement:l=null}){this.grid=e,this.boxId=t,this.boxBody=n,this.lineClass=s,this.elementClass=i,this.boxElement=l}create(){const e=$(`${this.boxId} ${this.boxBody}`);for(const[t,n]of this.grid.entries()){const s=this.createLine(t);for(const[e,t]of n.entries()){const n=this.createElement(e,t);s.append(n)}e.append(s)}}update(e){this.grid=e;const t=$(`${this.boxId} ${this.boxBody}`);for(const[e,n]of this.grid.entries()){const s=t.find(`${this.lineClass}:eq(${e})`);for(const[e,t]of n.entries()){const n=t?`&${t};`:"";s.find(`:eq(${e})`).removeClass().addClass(`${t} ${this.elementClass.slice(1)}`).html(n)}}}createLine(e=null){return $("<div/>").addClass(this.lineClass.slice(1)).data("key-line",e)}createElement(e=null,t=null){const n=t?`&${t};`:"";return $("<span/>").addClass(this.elementClass.slice(1)).data("key-element",e).addClass(t).html(n)}printNextElement(e){const t=e?`&${e};`:"";$(`${this.boxId} ${this.boxElement} i`).removeClass().addClass(e).html(t)}clearBody(){$(`${this.boxId} ${this.boxBody}`).empty()}}