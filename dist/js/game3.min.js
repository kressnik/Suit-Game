"use strict";$((function(){const t=new Grid(10,10).create(),e=new GridModificator(t);console.log(e.change(1,1))}));class Grid{constructor(t=null,e=null,i=null){this.grid=[],this.qtyLine=t||7,this.qtyElement=e||6,this.elementArr=i||["spades","clubs","diams","hearts"]}create(){for(let t=0;t<this.qtyLine;t++){this.grid[t]=[];for(let e=0;e<this.qtyElement;e++)this.grid[t].push(this.elementArr.randElement())}return JSON.parse(JSON.stringify(this.grid))}get(){return JSON.parse(JSON.stringify(this.grid))}}class GridModificator{constructor(t=null,e=null){this.grid=t,this.selectedElement="",this.changeToElement=e||""}change(t,e){return this.selectedElement=this.grid[t][e],this.dfs(t,e),JSON.parse(JSON.stringify(this.grid))}dfs(t,e){const i=[0,1],s=[1,0],r=[0,-1],n=[-1,0];this.grid[t][e]=this.changeToElement;for(const[h,l]of[i,s,r,n]){const i=t+l,s=e+h,r=this.grid.length,n=this.grid[0].length;this.checkSizeGrid(r,n,i,s)&&this.grid[i][s]===this.selectedElement&&this.dfs(i,s)}return!0}checkSizeGrid(t,e,i,s){return 0<=i&&i<t&&0<=s&&s<e}}